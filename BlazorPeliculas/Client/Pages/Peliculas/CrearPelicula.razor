@page "/peliculas/crear"
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager navigationManager
@inject IRepository repositorio
@inject SweetAlertService swal
@attribute [Authorize(Roles = "admin")]

<h3>Crear Pelicula</h3>

@if (MostarFormulario)
{
    <FormularioPeliculas Pelicula="Pelicula" OnValidSubmit="Crear"
    GenerosNoSeleccionados="GenerosNoSeleccionados"></FormularioPeliculas>
}
else
{
    <p>Cargando...</p>
}


@code {

    private Pelicula Pelicula = new Pelicula();
    private List<Genero> GenerosNoSeleccionados = new List<Genero>();
    public bool MostarFormulario { get; set; } = false;

    protected async override Task OnInitializedAsync()
    {
        var respuestaHTTP = await repositorio.Get<List<Genero>>("api/generos");
        GenerosNoSeleccionados = respuestaHTTP.Response;
        MostarFormulario = true;
    }

    async Task Crear()
    {
        var httpResponse = await repositorio.Post<Pelicula, int>("api/peliculas", Pelicula);

        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.ObtenerMensajeError();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            var PeliculaId = httpResponse.Response;
            navigationManager.NavigateTo($"/peliculas/{PeliculaId}/{Pelicula.Titulo.Replace(" ", "-")}");
        }
    }

}
