@for (int i = 1; i <= MaximaPuntuacion; i++)
{
    var numeroEstrella = i;
    <span 
        @onclick="@(() => !Disabled ? onClickHandle(numeroEstrella) : Task.CompletedTask)"
        @onmouseover="@(() => !Disabled ? onMouseOverHandle(numeroEstrella) : Task.CompletedTask)"
        style="cursor: pointer;"
        class="fa fa-star @(PuntuacionSeleccionada >= i ? "checked" : null)"
    ></span>
}

@code {
    [Parameter] public int MaximaPuntuacion { get; set; }
    [Parameter] public int PuntuacionSeleccionada { get; set; }
    [Parameter] public EventCallback<int> OnRating { get; set; }
    // To avoid any user not logged in to vote
    [Parameter] public bool Disabled { get; set; } = false;
    private bool votado = false;

    private async Task onClickHandle(int numeroEstrella)
    {
        PuntuacionSeleccionada = numeroEstrella;
        votado = true;
        await OnRating.InvokeAsync(PuntuacionSeleccionada);
    }

    private Task onMouseOverHandle(int numeroEstrella)
    {
        if (!votado)
        {
            PuntuacionSeleccionada = numeroEstrella;
        }
        return Task.CompletedTask;
    }
}
